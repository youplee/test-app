name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'login user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer $jwtToken'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: admin@gmail.com
        type: email
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '123456'
        type: string
        custom: []
    cleanBodyParameters:
      email: admin@gmail.com
      password: '123456'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZhckV648g56dvPfEb1aD3ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer $jwtToken'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: astdciuydrgbrfcqjs
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: rahul47@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: /B67^F
        type: string
        custom: []
    cleanBodyParameters:
      name: astdciuydrgbrfcqjs
      email: rahul47@example.com
      password: /B67^F
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3bkVZgE6f1avh84Pdc56eaD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer $jwtToken'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bvekg1h6cVEaa8DfZ34Pd56'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/refresh
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer $jwtToken'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 41EcZa6Dek6dfVv38ahPbg5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/listing-film
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get list films'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer $jwtToken'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                [
                    {
                        "id": 76600,
                        "backdrop_path": "/ovM06PdF3M8wvKb06i4sjW3xoww.jpg",
                        "title": "Avatar: The Way of Water",
                        "original_language": "en",
                        "original_title": "Avatar: The Way of Water",
                        "overview": "Set more than a decade after the events of the first film, learn the story of the Sully family (Jake, Neytiri, and their kids), the trouble that follows them, the lengths they go to keep each other safe, the battles they fight to stay alive, and the tragedies they endure.",
                        "poster_path": "/t6HIqrRAclMCA60NsSmeqe9RmNV.jpg",
                        "media_type": "movie",
                        "popularity": 1136.205,
                        "release_date": "2022-12-14",
                        "vote_average": 7.7,
                        "vote_count": 5649,
                        "video": 0,
                        "adult": 0,
                        "created_at": "2023-03-08T13:04:48.000000Z",
                        "updated_at": "2023-03-08T13:04:48.000000Z",
                        "budget": "460000000",
                        "homepage": "https://www.avatar.com/movies/avatar-the-way-of-water",
                        "status": "Released",
                        "revenue": "2281000000"
                    },
                    {
                        "id": 296271,
                        "backdrop_path": "/lInYIBIrx1DxX1Gngy0Ln3SDVYk.jpg",
                        "title": "The Devil Conspiracy",
                        "original_language": "en",
                        "original_title": "The Devil Conspiracy",
                        "overview": "The hottest biotech company in the world has discovered they can clone history’s most influential people from the dead. Now, they are auctioning clones of Michelangelo, Galileo, Vivaldi, and others for tens of millions of dollars to the world’s ultra-rich. But when they steal the Shroud of Turin and clone the DNA of Jesus Christ, all hell breaks loose.",
                        "poster_path": "/1AWcMtUZjpkq4h52yDnNIp9FwEO.jpg",
                        "media_type": "movie",
                        "popularity": 81.554,
                        "release_date": "2023-01-13",
                        "vote_average": 6.2,
                        "vote_count": 16,
                        "video": 0,
                        "adult": 0,
                        "created_at": "2023-03-08T13:04:51.000000Z",
                        "updated_at": "2023-03-08T13:04:51.000000Z",
                        "budget": "0",
                        "homepage": "",
                        "status": "Released",
                        "revenue": "0"
                    }
                ]
             }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1V5eb6DEgv6ad8cZ43Pfahk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer $jwtToken'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ekDV3186g6bvhfEd5Za4cPa'
    controller: null
    method: null
    route: null
    custom: []
